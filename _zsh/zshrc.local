zrclocal

## genrefcard.pl settings {{{

### doc strings for external functions from files
#m# f5 grml-wallpaper() Sets a wallpaper (try completion for possible values)

### example: split functions-search 8,16,24,32
#@# split functions-search 8

## }}}
export TERM=screen-256color 
#eval `dircolors ~/.zsh/dircolors.monokai`
eval `dircolors ~/.zsh/dircolors.solarized`
#alias tmux='tmux -2'
#[[ $TERM != "screen-256color" ]] && tmux
#if which tmux 2>&1 >/dev/null; then
    ##if not inside a tmux session, and if no session is started, start a new session
    #test -z "$TMUX" && (tmux attach || tmux new-session)
#fi
# for tmux: export 256color {{{
#[ -n "$TMUX" ] && export TERM=screen-256color-bce
# }}}


## zsh-git stuff from jcorbin {{{
# zgitinit and prompt_wunjo_setup must be somewhere in your $fpath, see README for more.
#
setopt promptsubst

# Load the prompt theme system
autoload -U promptinit
promptinit

# Use the wunjo prompt theme
prompt wunjo
# }}}


## {{{
##alias gvim='gvim -p --remote-tab-silent'
#alias vi='gvim'
if ( where nvim > /dev/null )
    then alias vim='nvim'
fi
alias -s tex=vim
alias -s bib=vim
alias -s hs=vim
alias -s org=vim
alias -s md=vim
alias -s py=python3
alias -s jar='java -jar'
alias o='xdg-open'
alias .vimrc='vim ~/.config/nvim/init.vim'
alias .zshrc='vim ~/.zshrc'
alias zshrc='vim ~/.zsh/zshrc.local'
alias music='mpc -p 6601'
alias ghc-sandbox="ghc -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
alias ghci-sandbox="ghci -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
alias runhaskell-sandbox="runhaskell -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
## }}}

# {{{
function pdfsearch()
{
    find . -iname '*.pdf' | while read filename
    do
        #echo -e "\033[34;1m// === PDF Document:\033[33;1m $filename\033[0m"
        pdftotext -q -enc ASCII7 "$filename" "$filename."; grep -s -H --color=always -i $1 "$filename."
        rm -f "$filename."
    done
}
# }}}
#layout=$(setxkbmap  -query | grep "layout"  | cut -d' ' -f6 )
#variant=$(setxkbmap -query | grep "variant" | cut -d' ' -f5 )

#if [[ ! (( $layout == "de" ) && ( $variant == "neo" )) ]]; then
    #setxkbmap de neo
#fi
alias uiae='setxkbmap de'
alias asdf='setxkbmap de neo'
compinit
autoload -U +X bashcompinit && bashcompinit
eval "$(stack --bash-completion-script stack)"
# eval "$(direnv hook zsh)"
RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
autoload -U colors && colors
#function haskell_info() {
#    cabal_files=(*.cabal(N))
#    if [ $#cabal_files -gt 0 ]; then
#        if [ -f cabal.sandbox.config ]; then
#            cabal_sandbox_info
#        elif [ -f stack.yaml ]; then
#            stack_info
#        else
#            echo "%{$fg[red]%}no stack/sandbox%{$reset_color%}"
#        fi
#    fi
#}
#
#function stack_info() {
#    ghc_version=`ghc --version | rev | cut -d' ' -f 1 | rev`
#    resolver_yaml=`cat stack.yaml | grep resolver | cut -d' ' -f 2`
#    if [ -d ".stack-work/install/x86_64-linux/${resolver_yaml}" ]; then
#        ghc_stack=`ls .stack-work/install/x86_64-linux/${resolver_yaml}/ | grep ${ghc_version}`
#        if [ $ghc_stack ]; then
#            echo "[%{$fg[green]%}${resolver_yaml} %{$reset_color%}| %{$fg[green]%}$ghc_version%{$reset_color%}]"
#        else
#            ghc_stack=`ls .stack-work/install/x86_64-linux/${resolver_yaml}/ | xargs`
#            echo  "[%{$fg[green]%}$resolver_yaml%{$reset_color%}|%{$fg[red]%}$ghc_stack%{$reset_color%}]"
#        fi
#    else
#        echo  "%{$fg[red]%}[${resolver_yaml} missing please do a 'stack build']%{$reset_color%}"
#    fi
#}
#
#function cabal_sandbox_info() {
#    ghc_version=`ghc --version | rev | cut -d' ' -f 1 | rev`
#    ghc_loc=`ls .cabal-sandbox | grep ghc | cut -d'-' -f 4 | grep $ghc_version`
#    if [ $ghc_loc ]; then
#        echo "[%{$fg[green]%}$ghc_version%{$reset_color%}]"
#    else
#        ghc_version=`ls .cabal-sandbox | grep ghc | cut -d'-' -f 4 | xargs`
#        echo  "[%{$fg[red]%}$ghc_version%{$reset_color%}]"
#    fi
#}
#
#RPROMPT="\$(haskell_info) $RPROMPT"
#source ~/utils/git-subrepo/.rc
#function chpwd {
#    case $(type ghc) in
#        (*alias*) unalias ghc;;
#    esac
#    case $(type ghci) in
#        (*alias*) unalias ghci;;
#    esac
#    case $(type runhaskell) in
#        (*alias*) unalias runhaskell;;
#    esac
#    cabal_files=(*.cabal(N))
#    if [[ $#cabal_files -gt 0 &&  -f cabal.sandbox.config ]]; then
#        alias ghc="ghc -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
#        alias ghci="ghci -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
#        alias runhaskell="runhaskell -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
#    fi
#}

## END OF FILE #################################################################
# vim:filetype=zsh foldmethod=marker autoindent expandtab shiftwidth=4
# Local variables:
# mode: sh
# End:
