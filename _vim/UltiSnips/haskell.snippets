snippet --scprop "Small Check Property" w
, SC.testProperty "${1:description}" $
    \\${2:param} -> ${3:function} ($2 :: ${4:Type}) == ${5:function} $2
--scprop${0}
endsnippet

snippet --qcprop "Quick Check Property" w
, QC.testProperty "${1:description}" $
    \\${2:param} -> ${3:function} ($2 :: ${4:Type}) == ${5:function} $2
--qcprop${0}
endsnippet

snippet --hunit "HUnit Test" w
, testCase "${1:description}" $
    ${2:function} ${3:param} @?= ${4:exp result}
--hunit${0}
endsnippet

snippet test-suite "Setup for Tasty" b

{-# OPTIONS_GHC -fno-warn-unused-imports #-}
import Test.Tasty
import Test.Tasty.SmallCheck as SC
import Test.Tasty.QuickCheck as QC
import Test.Tasty.HUnit

main :: IO ()
main = defaultMain tests

tests :: TestTree
tests = testGroup "Tests" [properties, unitTests]

properties :: TestTree
properties = testGroup "Properties" [scProps, qcProps]

scProps :: TestTree
scProps = testGroup "(checked by SmallCheck)"
  [--scprop
  ]

qcProps :: TestTree
qcProps = testGroup "(checked by QuickCheck)"
  [--qcprop
  ]

unitTests :: TestTree
unitTests = testGroup "Unit tests"
  [--hunit
  ]
endsnippet
